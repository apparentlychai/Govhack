{"version":3,"sources":["GetLocation.tsx","index.tsx"],"names":["withStreamlitConnection","defaultState","lat","lon","useState","useEffect","Streamlit","setFrameHeight","useGeolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","coords","isGeolocationAvailable","isGeolocationEnabled","locationPossible","cardTitle","location","latitude","longitude","locationIntent","Coordinates","NoLocation","setComponentValue","intent","title","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAmDeA,eA9CK,WAEhB,IAAMC,EAAe,CAAEC,IAAK,KAAMC,IAAK,MACvC,EAA0BC,mBAASH,GAAnC,6BAEAI,qBAAU,kBAAMC,IAAUC,oBAC1B,MACIC,wBAAc,CACVC,gBAAiB,CACbC,oBAAoB,GAExBC,oBAAqB,MALrBC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,uBAAwBC,EAAxC,EAAwCA,qBAQlCC,EAAmBF,GAA0BC,EAC7CE,EAAYD,EAAoBH,EAAS,iBAAmB,mBAAsB,2BAClFK,EAAWL,EAAS,CAAEV,IAAKU,EAAOM,SAAUf,IAAKS,EAAOO,WAAclB,EACtEmB,EAAyBL,EAAoBH,EAAS,UAAY,UAAa,OAIrF,SAASS,IACL,OACI,6BACI,wCAAcJ,EAASf,KACvB,yCAAee,EAASd,MAKpC,SAASmB,IACL,OACI,2EAIR,OAjBAhB,IAAUiB,kBAAkBN,GAkBxB,kBAAC,IAAD,CAASO,OAAQJ,EAAgBK,MAAOT,GACnCD,GAAoBH,EACf,kBAACS,EAAD,MACA,kBAACC,EAAD,U,cCrClBI,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.1315d4ff.chunk.js","sourcesContent":["import React, { useEffect, useState }from \"react\";\nimport { useGeolocated } from \"react-geolocated\";\nimport { Intent, Callout } from \"@blueprintjs/core\";\nimport { Streamlit, withStreamlitConnection } from \"streamlit-component-lib\";\n\nconst GetLocation = () => {\n\n    const defaultState = { lat: null, lon: null }\n    const [value, setValue] = useState(defaultState);\n\n    useEffect(() => Streamlit.setFrameHeight());\n    const { coords, isGeolocationAvailable, isGeolocationEnabled } =\n        useGeolocated({\n            positionOptions: {\n                enableHighAccuracy: false,\n            },\n            userDecisionTimeout: 5000,\n    });\n    \n    const locationPossible = isGeolocationAvailable || isGeolocationEnabled\n    const cardTitle = locationPossible ? (coords ? \"Location found\" : \"Finding location\") : \"Enter your address below\"\n    const location = coords ? { lat: coords.latitude, lon: coords.longitude } : defaultState\n    const locationIntent: Intent = locationPossible ? (coords ? \"success\" : \"primary\") : \"none\"\n\n    Streamlit.setComponentValue(location)\n\n    function Coordinates() {\n        return (\n            <div>\n                <p>Latitude: {location.lat}</p>\n                <p>Longitude: {location.lon}</p>\n            </div>\n        );\n    }\n\n    function NoLocation() {\n        return (\n            <p>Please enter your address in the field below</p>\n        );\n    }\n\n    return (\n        <Callout intent={locationIntent} title={cardTitle}>\n            {locationPossible && coords\n                ? <Coordinates />\n                : <NoLocation />\n            }\n        </Callout>\n    )\n};\n\nexport default withStreamlitConnection(GetLocation);","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport GetLocation from \"./GetLocation\";\n\n// CSS imports\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\nimport \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <GetLocation />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}